name: Publish Olve.Grids

on:
  push:
    branches:
      - "**"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - "**"
env:
  VERSION: 1.0.0

defaults:
  run:
    working-directory: .

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 9.0.x
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --no-restore -c Release
      
      - name: Test
        run: dotnet test --no-build -c Release --verbosity normal
  
  nuget:
    runs-on: ubuntu-latest
    needs: 
      - test
    steps:
      - uses: actions/checkout@v3
        
      - name: Set Version Variable
        if: ${{ github.ref_type == 'tag' }}
        env:
          TAG: ${{ github.ref_name }}
        run: echo "VERSION=${TAG#v}" >> $GITHUB_ENV
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 9.0.x
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --no-restore -c Release /p:Version=$VERSION
        
      - name: pack nuget packages
        run: dotnet pack ./src/Olve.Grids --output nupkgs --no-restore --no-build -c Release /p:PackageVersion=$VERSION
        
      - name: upload nuget package
        if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
        run: dotnet nuget push nupkgs/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
        
  publish:
    runs-on: windows-latest
    needs: 
      - test
    steps:
      - uses: actions/checkout@v3
        
      - name: Set Version Variable
        if: ${{ github.ref_type == 'tag' }}
        env:
          TAG: ${{ github.ref_name }}
        run: echo "VERSION=${TAG#v}" >> $GITHUB_ENV
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 9.0.x
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --no-restore -c Release /p:Version=$VERSION /p:DebugType=None /p:DebugSymbols=false
        
      - name: publish demo as executable
        run: dotnet publish ./src/Demo --output ./build --no-restore --no-build -c Release -r win-x64 /p:PackageVersion=$VERSION
        
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r demo-$VERSION.zip build
        
      - name: upload demo
        if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: Demo-$VERSION
          path: demo-$VERSION.zip