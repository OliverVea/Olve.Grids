name: Publish to NuGet

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      pre_release:
        description: 'Publish a pre-release version'
        required: true
        default: true
        type: boolean

jobs:
  resolve_version:
    runs-on: ubuntu-latest

    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}

    steps:
    - uses: actions/checkout@v4

    - name: Resolving version
      uses: ./.github/actions/get-version
      id: version
      with:
        pre-release: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_call' && github.event.inputs.pre_release) }}
        directory: ./scripts

  dotnet_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: ./.github/actions/dotnet-setup

    - name: Build
      run: dotnet build --no-restore -c Release /p:Version=1.0.0

    - name: Verify trimming
      run: dotnet publish ./tests/Olve.Grids.Trimming --no-restore -c Release -r linux-x64 --self-contained

    - name: Test
      run: dotnet test --no-build -c Release

  changes:
    runs-on: ubuntu-latest
    outputs:
      olve-grids: ${{ steps.filter.outputs.olve-grids }}
      olve-grids-serialization: ${{ steps.filter.outputs.olve-grids-serialization }}
      olve-grids-debroglie: ${{ steps.filter.outputs.olve-grids-debroglie }}
      olve-grids-io: ${{ steps.filter.outputs.olve-grids-io }}
    steps:
    - uses: actions/checkout@v3

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          olve-grids:
            - 'src/Olve.Grids/**'
          olve-grids-serialization:
            - 'src/Olve.Grids/**'
            - 'src/Olve.Grids.Serialization/**'
          olve-grids-debroglie:
            - 'src/Olve.Grids/**'
            - 'src/Olve.Grids.Debroglie/**'
          olve-grids-io:
            - 'src/Olve.Grids/**'
            - 'src/Olve.Grids.IO/**'

    - name: Debug output
      run: |
        echo "Output value: ${{ steps.filter.outputs.olve-grids }}"

  dotnet_publish_olve_grids:
    runs-on: ubuntu-latest
    needs:
      - resolve_version
      - dotnet_test
      - changes
    if: ${{ needs.changes.outputs.olve-grids == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: ./.github/actions/dotnet-setup

    - name: Publish Olve.Grids
      uses: ./.github/actions/dotnet-publish
      with:
        project: ./src/Olve.Grids
        package-name: Olve.Grids
        version: ${{ needs.resolve_version.outputs.VERSION }}
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        dry-run: false

  dotnet_publish_olve_grids_serialization:
    runs-on: ubuntu-latest
    needs:
      - resolve_version
      - dotnet_test
      - changes
    if: ${{ needs.changes.outputs.olve-grids-serialization == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: ./.github/actions/dotnet-setup

    - name: Publish Olve.Grids.Serialization
      uses: ./.github/actions/dotnet-publish
      with:
        project: ./src/Olve.Grids.Serialization
        package-name: Olve.Grids.Serialization
        version: ${{ needs.resolve_version.outputs.VERSION }}
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        dry-run: false


  dotnet_publish_olve_grids_debroglie:
    runs-on: ubuntu-latest
    needs:
      - resolve_version
      - dotnet_test
      - changes
    if: ${{ needs.changes.outputs.olve-grids-debroglie == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: ./.github/actions/dotnet-setup

    - name: Publish Olve.Grids.DeBroglie
      uses: ./.github/actions/dotnet-publish
      with:
        project: ./src/Olve.Grids.DeBroglie
        package-name: Olve.Grids.DeBroglie
        version: ${{ needs.resolve_version.outputs.VERSION }}
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        dry-run: false

  dotnet_publish_olve_grids_io:
    runs-on: ubuntu-latest
    needs:
      - resolve_version
      - dotnet_test
      - changes
    if: ${{ needs.changes.outputs.olve-grids-io == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: ./.github/actions/dotnet-setup

    - name: Publish Olve.Grids.IO
      uses: ./.github/actions/dotnet-publish
      with:
        project: ./src/Olve.Grids.IO
        package-name: Olve.Grids.IO
        version: ${{ needs.resolve_version.outputs.VERSION }}
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        dry-run: false
