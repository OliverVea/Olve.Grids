@page "/project/{projectId}/edit-adjacencies/{tileIndex:int}"
@using Olve.Grids.Grids
@using UI.Core
@using UI.Core.Logging
@using UI.Core.Projects
@using UI.Core.Projects.Operations
@using UI.Core.Tiles
@inject GetProjectOperation GetProjectOperation
@inject LoggingService LoggingService
@inject NavigationService NavigationService
@inject GetTileInformationOperation GetTileInformationOperation

@if (_tileInformation == null || _project == null)
{
    <span>Loading...</span>
    return;
}

<EditAdjacencies Project="@_project" TileInformation="@_tileInformation.Value"/>


@code {
    [Parameter] public required string ProjectId { get; set; }
    [Parameter] public required int TileIndex { get; set; }

    private TileInformation? _tileInformation;
    private Project? _project;

    protected override async Task OnParametersSetAsync()
    {
        var tileIndex = new TileIndex(TileIndex);

        var projectIdResult = Id<Project>.TryParse(ProjectId, out var projectId);
        if (!projectIdResult)
        {
            var problem = new ResultProblem("Invalid project id: '{0}'", ProjectId);
            LoggingService.Show(problem);

            var navigationTarget = new NavigationTargets.Home();
            NavigationService.NavigateTo(navigationTarget);
            return;
        }

        GetProjectOperation.Request getProjectRequest = new(projectId);
        var currentProjectResult = await GetProjectOperation.ExecuteAsync(getProjectRequest);
        if (currentProjectResult.TryPickProblems(out var problems, out _project))
        {
            LoggingService.Show(problems);

            var navigationTarget = new NavigationTargets.Home();
            NavigationService.NavigateTo(navigationTarget);

            return;
        }

        GetTileInformationOperation.Request getTileInformationRequest = new(_project.Id, tileIndex);
        var tileInformationResult = await GetTileInformationOperation.ExecuteAsync(getTileInformationRequest);
        if (tileInformationResult.TryPickProblems(out var tileInformationProblems, out var response))
        {
            LoggingService.Show(tileInformationProblems);

            var navigationTarget = new NavigationTargets.ProjectDashboard(_project.Id);
            NavigationService.NavigateTo(navigationTarget);

            return;
        }

        _tileInformation = response.TileInformation;
    }

}