@using UI.Core
@using UI.Core.Logging
@using UI.Core.Tiles
@inject DeactivateTileOperation DeactivateTileOperation
@inject LoggingService LoggingService
@inject NavigationService NavigationService

<ContextMenuText Text="@Title"/>
<ContextMenuDivider/>
<ContextMenuOption
    OnClick="@HandleEditAdjacencies">
    Adjacencies
</ContextMenuOption>
<ContextMenuOption OnClick="DeactivateTile" TextColor="Colors.Active.Text.Danger">
    Deactivate
</ContextMenuOption>

@code {
    [Parameter] [EditorRequired] public required TileInformation TileInformation { get; set; }

    private string Title => $"Tile {TileInformation.TileIndex.Index}";


    private async Task DeactivateTile()
    {
        var request = new DeactivateTileOperation.Request(TileInformation.ProjectId, TileInformation.TileIndex);
        var result = await DeactivateTileOperation.ExecuteAsync(request);

        if (result.TryPickProblems(out var problems))
        {
            LoggingService.Show(problems);
        }
    }

    private void HandleEditAdjacencies()
    {
        var navigationTarget = new NavigationTargets.EditTileAdjacencies(TileInformation.ProjectId, TileInformation.TileIndex);
        NavigationService.NavigateTo(navigationTarget);
    }

}